menu_choice <- menu(choices = c(confirm_ok, confirm_cancel),
title = paste(confirm_message_a, input, confirm_message_b, sep =))
if(menu_choice == 1){TRUE} else {FALSE}
}
}
confirmbox("X")
promptbox <- function(title, message, default = "", ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
while(confirm == FALSE)
{
if(vcheck == TRUE)
{
value <- rstudioapi::showPrompt(title = title,
message = message,
default = default)
} else
{
value <- readline(prompt = message)
}
confirm <- confirmbox(value)
}
}
promptbox <- function(title, message, default = "", ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
while(confirm == FALSE)
{
if(vcheck == TRUE)
{
value <- rstudioapi::showPrompt(title = title,
message = message,
default = default)
} else
{
value <- readline(prompt = message)
}
confirm <- confirmbox(value)
}
return(value)
}
promptbox("Test","What's your name?")
confirmbox <- function(input,
confirm_title = "Confirm Entry",
confirm_message_a = "You entered",
confirm_message_b = " . Is this correct?",
confirm_ok = "Yes",
confirm_cancel = "No",
...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
if(vcheck == TRUE)
{
rstudioapi::showQuestion(title = confirm_title,
message = paste(confirm_message_a, input, confirm_message_b, sep=" "),
ok = confirm_ok,
cancel = confirm_cancel)
} else
{
menu_choice <- menu(choices = c(confirm_ok, confirm_cancel),
title = paste(confirm_message_a, input, confirm_message_b, sep =))
if(menu_choice == 1){TRUE} else {FALSE}
}
}
promptbox("Test","What's your name?")
x <- rstudioapi::showPrompt("Test","Yo","")
cancelbox <- function(cancel_title = "Stop Script?",
cancel_message = "I'm sorry, but your input is required to proceed. Are you sure you want to stop running this script?",
cancel_ok = "Yes",
cancel_cancel = "No",
...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
if(vcheck == TRUE)
{
stopit <- rstudioapi::showQuestion(title = cancel_title,
message = cancel_message,
ok = cancel_ok,
cancel = cancel_cancel)
} else
{
menu_choice <- menu(choices = c(cancel_ok, cancel_cancel),
title = cancel_message)
if(menu_choice == 1){stopit <- TRUE} else {stopit <- FALSE}
}
if(stopit == TRUE)
{
boxit::softstop(message = "User input not provided. Script canceled by user.")
}
}
promptbox <- function(title, message, default = "", ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
while(confirm == FALSE)
{
if(vcheck == TRUE)
{
value <- rstudioapi::showPrompt(title = title,
message = message,
default = default)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
confirm <- confirmbox(value)
}
return(value)
}
promptbox("Test","What's your name?")
library(eatools)
promptbox("Test","What's your name?")
cancelbox <- function(cancel_title = "Stop Script?",
cancel_message = "I'm sorry, but your input is required to proceed. Are you sure you want to stop running this script?",
cancel_ok = "Yes",
cancel_cancel = "No",
...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
if(vcheck == TRUE)
{
stopit <- rstudioapi::showQuestion(title = cancel_title,
message = cancel_message,
ok = cancel_ok,
cancel = cancel_cancel)
} else
{
menu_choice <- menu(choices = c(cancel_ok, cancel_cancel),
title = cancel_message)
if(menu_choice == 1){stopit <- TRUE} else {stopit <- FALSE}
}
if(stopit == TRUE)
{
softstop(message = "User input not provided. Script canceled by user.")
}
}
promptbox("Test","What's your name?")
promptbox <- function(title, message, default = "", ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
value <- NULL
while(confirm == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showPrompt(title = title,
message = message,
default = default)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
confirm <- confirmbox(value)
}
return(value)
}
promptbox("Test","What's your name?")
promptbox("Test","What's your name?")
promptbox <- function(title, message, default = "", ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
value <- NULL
while(confirm == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showPrompt(title = title,
message = message,
default = default)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
confirm <- confirmbox(value)
if(confirm == FALSE) {value <- NULL}
}
return(value)
}
promptbox("Test","What's your name?")
library(rstudioapi)
showQuestion("x","x")
questionbox <- function(title, message, ok = "Yes", cancel = "No", ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
value <- NULL
while(confirm == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
confirm <- confirmbox(value)
if(confirm == FALSE) {value <- NULL}
}
return(value)
}
showQuestion("x","x")
showQuestion("x","x")
questionbox <- function(title, message, ok = "Yes", cancel = "No", confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
value <- NULL
while(confirm == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
if(confirm == TRUE)
{
confirm_value <- confirmbox(if(value == TRUE) {ok} else {cancel})
if(confirm_value == FALSE) {value <- NULL}
}
}
return(value)
}
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox <- function(title, message, ok = "Yes", cancel = "No", confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm <- FALSE
value <- NULL
while(confirm == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
if(confirm == TRUE)
{
verify <- if(value == TRUE) {ok} else {cancel}
confirm_value <- confirmbox(verify)
if(confirm_value == FALSE) {value <- NULL}
}
}
return(value)
}
questionbox(title = "Test", message = "Would you like to buy a monkey?")
promptbox
promptbox(title = "X", message = "y")
questionbox <- function(title, message, ok = "Yes", cancel = "No", confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm_value <- FALSE
value <- NULL
while(confirm_value == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
if(confirm == TRUE)
{
verify <- if(value == TRUE) {ok} else {cancel}
confirm_value <- confirmbox(verify)
if(confirm_value == FALSE) {value <- NULL}
}
}
return(value)
}
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox <- function(title, message, ok = "Yes", cancel = "No", logical = TRUE, confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm_value <- FALSE
value <- NULL
while(confirm_value == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
actual_value <- if(value == TRUE) {ok} else {cancel}
if(confirm == TRUE)
{
confirm_value <- confirmbox(actual_value)
if(confirm_value == FALSE) {value <- NULL}
}
}
if(logical == TRUE) {return(value)} else {return(actual_value)}
}
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical == FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = FALSE, confirm = FALSE)
questionbox <- function(title, message, ok = "Yes", cancel = "No", logical = TRUE, confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm_value <- FALSE
value <- NULL
while(confirm_value == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
actual_value <- if(value == TRUE) {ok} else {cancel}
if(confirm == TRUE)
{
confirm_value <- confirmbox(actual_value)
if(confirm_value == FALSE) {value <- NULL}
} else {confirm_value == TRUE}
}
if(logical == TRUE) {return(value)} else {return(actual_value)}
}
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = FALSE, confirm = FALSE)
questionbox <- function(title, message, ok = "Yes", cancel = "No", logical = TRUE, confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm_value <- FALSE
value <- NULL
while(confirm_value == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
actual_value <- if(value == TRUE) {ok} else {cancel}
if(confirm == TRUE)
{
confirm_value <- confirmbox(actual_value)
if(confirm_value == FALSE) {value <- NULL}
} else {confirm_value = TRUE}
}
if(logical == TRUE) {return(value)} else {return(actual_value)}
}
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = FALSE, confirm = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = FALSE, confirm = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = TRUE, confirm = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = TRUE, confirm = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = TRUE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", logical = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?")
promptbox <- function(title, message, default = "", confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm_value <- FALSE
value <- NULL
while(confirm_value == FALSE)
{
while(is.null(value))
{
if(vcheck == TRUE)
{
value <- rstudioapi::showPrompt(title = title,
message = message,
default = default)
if(is.null(value)) {cancelbox()}
} else
{
value <- readline(prompt = message)
}
}
if(confirm == TRUE)
{
confirm_value <- confirmbox(value)
if(confirm_value == FALSE) {value <- NULL}
} else {confirm_value = TRUE}
}
return(value)
}
promptbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox(title = "Test", message = "Would you like to buy a monkey?", confirm == FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?", confirm = FALSE)
questionbox <- function(title, message, ok = "Yes", cancel = "No", logical = TRUE, confirm = TRUE, ...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
confirm_value <- FALSE
while(confirm_value == FALSE)
{
if(vcheck == TRUE)
{
value <- rstudioapi::showQuestion(title = title,
message = message,
ok = ok,
cancel = cancel)
} else
{
value <- readline(prompt = message)
}
actual_value <- if(value == TRUE) {ok} else {cancel}
if(confirm == TRUE)
{
confirm_value <- confirmbox(actual_value)
} else {confirm_value = TRUE}
}
if(logical == TRUE) {return(value)} else {return(actual_value)}
}
questionbox(title = "Test", message = "Would you like to buy a monkey?", confirm = FALSE)
questionbox(title = "Test", message = "Would you like to buy a monkey?")
questionbox(title = "Test", message = "Would you like to buy a monkey?")
confirmbox <- function(input,
confirm_title = "Confirm Entry",
confirm_message_a = "You entered",
confirm_message_b = ". Is this correct?",
confirm_ok = "Yes",
confirm_cancel = "No",
...)
{
vcheck <- rstudioapi::isAvailable(version_needed = "1.1.67")
if(vcheck == TRUE)
{
rstudioapi::showQuestion(title = confirm_title,
message = paste(confirm_message_a, input, confirm_message_b, sep=" "),
ok = confirm_ok,
cancel = confirm_cancel)
} else
{
menu_choice <- menu(choices = c(confirm_ok, confirm_cancel),
title = paste(confirm_message_a, input, confirm_message_b, sep =))
if(menu_choice == 1){TRUE} else {FALSE}
}
}
library(devtools)
library(roxygen2)
document()
document()
install("../boxit")
library(boxit)
rm(list = ls())
questionbox(title = "Test", message = "Would you like to buy a monkey?")
document()
install("../boxit")
library(boxit)
