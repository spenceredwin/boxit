% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/questionbox.R
\name{questionbox}
\alias{questionbox}
\title{Question Box}
\usage{
questionbox(title, message, ok = "Yes", cancel = "No",
  logical = TRUE, confirm = TRUE, ...)
}
\arguments{
\item{title}{The title of the question box}

\item{message}{The question asking for user input}

\item{ok}{The positive ("yes") response value.  Default is "Yes"}

\item{logical}{Option to return either a logical value (TRUE / FALSE) or the ok/cancel value.  TRUE returns logical. Default is TRUE}

\item{confirm}{Set confirm = FALSE in order to disable the confirmation step.  Default is TRUE}

\item{...}{Additional arguments to pass to confirmbox and cancelbox}

\item{no}{The negative ("no") response value.  Default is "No"}
}
\description{
Sometimes you need some info from the user.  You could ask in the console, but that's easy to miss.  Why not use a dialog box in RStudio!
questionbox() provides a pop up box to get user input as a binary (yes/no) response to a question.  Of course, so does rstudioapi::showQuestion().
But what makes questionbox() special is that has built in dialog boxes to confirm the user's input.
It also has a built in check so that if the user hits cancel, it will confirm they really meant to do so.
If the user is not using RStudio, or their version of RStudio is not 1.1.67 or greater, it will use readline() to ask in the console.  Because portability.
}
\examples{
x <- questionbox(title = "Would you like to buy a monkey?", ok = "Sure!", cancel = "No Way!")
}
\keyword{boxit}
